--- a/vendor/ebizmarts/magento2-mandrill/Model/SenderBuilder.php
+++ b/vendor/ebizmarts/magento2-mandrill/Model/SenderBuilder.php
@@ -7,20 +7,29 @@ use Magento\Sales\Model\Order\Email\Container\IdentityInterface;
 use Magento\Sales\Model\Order\Email\Container\Template;
 use Magento\Framework\Mail\MessageInterface;
 use Magento\Framework\ObjectManagerInterface;
+use Magento\Framework\Mail\Template\SenderResolverInterface;

 class SenderBuilder extends \Magento\Sales\Model\Order\Email\SenderBuilder
 {
     /**
+     * @var SenderResolverInterface
+     */
+    private $senderResolver;
+
+    /**
      * SenderBuilder constructor.
-     *
      * @param Template $templateContainer
      * @param IdentityInterface $identityContainer
      * @param ObjectManagerInterface $objectManager
+     * @param SenderResolverInterface $senderResolver
+     * @param array $attachments
      */
     public function __construct(
         Template $templateContainer,
         IdentityInterface $identityContainer,
-        ObjectManagerInterface $objectManager
+        ObjectManagerInterface $objectManager,
+        SenderResolverInterface $senderResolver,
+        array $attachments = []
     ) {
         /** @var MessageInterface $message */
         $message = $objectManager->create(MessageInterface::class);
@@ -35,5 +44,17 @@ class SenderBuilder extends \Magento\Sales\Model\Order\Email\SenderBuilder
             ["message" => $message]
         );
         parent::__construct($templateContainer, $identityContainer, $transportBuilder, $transportBuilderByStore);
+        $this->senderResolver = $senderResolver;
+//        $transportBuilder->setAttachments($attachments);
+    }
+    protected function configureEmailTemplate()
+    {
+        parent::configureEmailTemplate();
+        $this->transportBuilder->setFrom(
+            $this->senderResolver->resolve(
+                $this->identityContainer->getEmailIdentity(),
+                $this->identityContainer->getStore()->getId()
+            )
+        );
     }
 }
--